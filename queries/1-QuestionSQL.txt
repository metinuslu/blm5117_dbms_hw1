Step-1.1: Create "T" Table
	CREATE TABLE vtsg_db.public.T(
		a VARCHAR(40),
		b INT,
		c BOOLEAN
	);

Step-1.2: Describe "T" Table
	\d

Step-1.3: -- Generate and Insert 2 Million Random Values 
	INSERT INTO vtsg_db.public.T (a, b, c)
	SELECT
		chr(trunc(65 + random() * 25)::int) || upper(substring(md5(random()::text) FROM 1 FOR 4)), --A Kolonu: İlk karakter Alfabetik ardından 4 karakter Alfanümerik olmak üzere 5 Karakter
		trunc(random() * 1500000)::int, -- B Kolonu: 0 ile 1.5 milyona kadar
		random() > 0.5 -- C Kolonu: Rastgele TRUE veya FALSE
	FROM
		generate_series(1, 2000000);
		
Step-1.4: -- Control Table Count   
	SELECT COUNT(*) as CNT from vtsg_db.public.T;

Step-1.5: -- Show Table Rows only 10 rows
	SELECT * from vtsg_db.public.T limit 10;

Step-1.6: -- Control Table Metadata Info
	SELECT 
	--column_name, data_type
	*
	FROM information_schema.columns
	WHERE table_catalog='vtsg_db' and table_schema = 'public' and table_name = 't';
	
	
Step-1.7: T Tablosunun Büyüklüğü (MB)
	SELECT 
		pg_table_size('vtsg_db.public.T') / 1024 AS "Table_Size_KB", --Tablonun yalnızca veri boyutu (sadece tablo verisi) Byte->KiloByte olarak verir
		pg_size_pretty(pg_table_size('vtsg_db.public.T')) AS "Table_Size_MB", --Tablonun yalnızca veri boyutu (sadece tablo verisi)
		pg_size_pretty(pg_indexes_size('vtsg_db.public.T')) AS "Table_Indexes_Size", -- Tablonun yalnızca indeks boyutu
		pg_size_pretty(pg_total_relation_size('vtsg_db.public.T')) AS "Table_Total_Size" --Tablonun toplam boyutu (veri, indeks ve boş alan dahil)


Step-1.8: T Tablosunun İçerdiği Disk Sayfa Sayısı
	SHOW block_size;
	--result: 8192
	
	SELECT 
		pg_relation_size('vtsg_db.public.T') / current_setting('block_size')::int AS "Table_Page_Count", --Table Page Size
		pg_total_relation_size('vtsg_db.public.T') / current_setting('block_size')::int AS "Table_Total_Page_Count" --All T Objects (Table+ Index + Other Datas) Page Size


Step-1.9: b Niteliğine Ait Sütun İstatistikleri
	SELECT *
	FROM pg_stats
	WHERE schemaname = 'public' AND tablename = 't' AND attname = 'b';


	
Step-1.10: pg_attribute Sistem Kataloğu ile Dosyanın Sabit / Değişken Uzunluklu Kayıt Dosyası Olma Durumu

	SELECT 
		a.attname,
		a.atttypid::regtype AS data_type,
		a.attlen,
		CASE 
			WHEN a.attlen = -1 THEN 'Variable Length'
			WHEN a.attlen > 0 THEN 'Fixed Length'
			ELSE 'Unknown'
		END AS length_type
	FROM 
		pg_attribute a
	JOIN 
		pg_class c ON a.attrelid = c.oid
	WHERE 
		c.relname = 't' AND a.attnum > 0;